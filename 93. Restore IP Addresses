class Solution {
    void restore(StringBuilder str, int i, int n, List<String> l)
    {
        if(i==str.length()-1)
            return;
        if(n==3)
        {String st= str.substring(i+1,str.length());
        int j= Integer.valueOf(st);
        if(st.length()==1&&st.equals("0"))
        {String s1= new String(str.toString()); l.add(s1);}
         else if(st.charAt(0)=='0')
             return;
         else if(j<=255)
             {String s1= new String(str.toString()); l.add(s1);}
         else return;
         }
        
        if(i+1<str.length()&&str.charAt(i+1)=='0')
        {
            str.insert(i+2,'.');
            restore(str,i+2,n+1,l);
            str.delete(i+2,i+3);
        }
        
        else
        {
        if(i+1<str.length())
        {
            str.insert(i+2,'.');
            restore(str,i+2,n+1,l);
            str.delete(i+2,i+3);
        }
            
            if(i+2<str.length())
        {str.insert(i+3,'.');
            restore(str,i+3,n+1,l);
            str.delete(i+3,i+4);}
            
         if(i+3<str.length())  
         {String st= str.substring(i+1,i+4);
        int j= Integer.valueOf(st);
            
            if(j<=255)
            {str.insert(i+4,'.');
            restore(str,i+4,n+1,l);
            str.delete(i+4,i+5);}}
        }return;
        
        
    }
    
    public List<String> restoreIpAddresses(String s) {
        int n=s.length();
        if(n<4||n>12)
            return new ArrayList<String>();
       
        List<String> l= new ArrayList<String>();
        StringBuilder str= new StringBuilder(s);
        restore(str,-1,0,l);
        return l;
    }
}
